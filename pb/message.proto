syntax = "proto3";

package p2p2p;

option go_package = "go/types/message;message";

// used to wrap encrypted messages
message MessageWrapper {
  bytes message = 1;// encrypted
  bytes signature = 2;
  bytes nonce = 3;
}

message Message {
  string id = 1; // unique id for the message
  MessageType type = 2;
  oneof payload {
    FileDownloadRequeset file_download_request = 3;
    FileUploadRequest file_upload_request = 4;
    FileListRequest file_list_request = 5;
    KeyMigrationRequest key_migration_request = 6;
    FileList file_list = 7;
    FileContents file_contents = 8;
    Decline decline = 9;
    Confirmation confirmation = 10;
  }
}

// first thing sent by the client after secure connection is established
enum MessageType {
    LIST_FILES = 0;
}

message Decline { // used to decline a request to perform an action
  string reason = 1;
}

message Confirmation { // used to confirm action was successful
  string message = 1;
}

// Protocol messages
message FileDownloadRequeset {
    string file_name = 1;
}

message FileUploadRequest {
    string file_name = 1;
}

message FileListRequest {

}

message KeyMigrationRequest {
}

message FileList {
    repeated FileMetadata files = 1;
}

message FileMetadata {
    string hash = 1;
    string name = 2;
}

message FileContents {
    bytes data = 1;
}